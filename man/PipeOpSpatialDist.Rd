% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpSpatialDist.R
\name{PipeOpSpatialDist}
\alias{PipeOpSpatialDist}
\title{Add buffer distances to 3D reference locations as features}
\value{
a `PipeOpSpatialDist` R6 class object
}
\description{
Adds new variables based on the 3D Euclidean distances to reference locations.
}
\examples{
library(ggplot2)
library(data.table)
library(mlr3)
library(mlr3pipelines)
library(mlr3spatialops)

# create a dataset consisting of two coordinate features
df = expand.grid(x = 1:10, y = 1:10)
df$class = as.factor(c(rep("class1", 50), rep("class2", 50)))
task = as_task_classif(df, target = "class")

pop = PipeOpSpatialDist$new()
pop$param_set$values$ycolname = "y"
pop$param_set$values$xcolname = "x"
pop$param_set$values$ref_ys = c(min(task$data()$y), max(task$data()$y))
pop$param_set$values$ref_xs = c(min(task$data()$x), max(task$data()$x))
pop$param_set$values$minimum = FALSE

pop$train(list(task))
result = pop$predict(list(task))
result = result$output$data()

ggplot(result, aes(x = x, y = y, fill = geodist2)) +
  geom_raster() +
  scale_fill_viridis_c(option = "turbo")
}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3pipelines:PipeOpTaskPreproc]{mlr3pipelines::PipeOpTaskPreproc}} -> \code{\link[mlr3pipelines:PipeOpTaskPreprocSimple]{mlr3pipelines::PipeOpTaskPreprocSimple}} -> \code{PipeOpSpatialDist}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PipeOpSpatialDist-new}{\code{PipeOpSpatialDist$new()}}
\item \href{#method-PipeOpSpatialDist-clone}{\code{PipeOpSpatialDist$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="help"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-help'><code>mlr3pipelines::PipeOp$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-predict'><code>mlr3pipelines::PipeOp$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-print'><code>mlr3pipelines::PipeOp$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-train'><code>mlr3pipelines::PipeOp$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpSpatialDist-new"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpSpatialDist-new}{}}}
\subsection{Method \code{new()}}{
Create a new PipeOpSpatialDist3D object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpSpatialDist$new(
  id = "geodist3d",
  param_vals = list(prefix = "geodist", minimum = TRUE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{character, identifier for the class instance.}

\item{\code{param_vals}}{named list of hyperparameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `PipeOpSpatialDist3D` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpSpatialDist-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpSpatialDist-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpSpatialDist$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
